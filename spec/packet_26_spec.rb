# -*- encoding: utf-8 -*-
require 'minitest/spec'
require 'minitest/autorun'

require "json"
require "newfor_gem"

describe NewforGem do
  ES_PKT_S2           = "\x0f\x47\x02\x49\x20\x0d\x07\x0b\x0b\x53\x32\x20\x71\x77\x65\x72\x74\x79\x75\x69\x6f\x70\x61\x73\x64\x66\x67\x68\x6a\x6b\x6c\x7c\x7a\x78\x63\x76\x62\x6e\x6d\x0a\x0a\x20\x20\x20"  
  ES_PKT_S3           = "\x0f\x0c\x02\x0c\x15\x53\x93\x80\x5f\xd1\xce\x74\xff\x80\x74\xff\x80\x74\xff\x80\x74\xff\x80\x74\xff\x80\x74\xff\x80\x74\xff\x80\x74\xff\x80\x74\xff\x80\x74\xff\x80\x74\x7f\xff\x02\x49\x20\x0d\x07\x0b\x0b\x53\x33\x20\x51\x57\x45\x52\x54\x59\x55\x49\x4f\x50\x41\x53\x44\x46\x47\x48\x4a\x4b\x4c\xa0\x5a\x58\x43\x56\x42\x4e\x4d\x0a\x0a\x20\x20\x20"
  ES_PKT_S4           = "\x0f\x0c\x02\x0c\x15\x53\x93\x80\x34\xbd\x50\x5a\x6d\xc3\x74\xff\x80\x74\xff\x80\x74\xff\x80\x74\xff\x80\x74\xff\x80\x74\xff\x80\x74\xff\x80\x74\xff\x80\x74\xff\x80\x74\x7f\xff\x02\x49\x20\x20\x20\x20\x20\x20\x20\x20\x20\x0d\x07\x0b\x0b\x53\x34\x20\x3c\x3e\x2c\x3b\x2e\x3a\x2d\xa0\x2a\x23\xa0\x0a\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20"
  ES_PKT_TWO_LINES    = "\x0f\x1b\x02\x0c\x15\x79\x93\x00\x77\x6d\xc3\x09\xd2\xce\x05\xbe\xd6\x74\xff\x80\x74\xff\x80\x74\xff\x80\x74\xff\x80\x74\xff\x80\x74\xff\x80\x74\xff\x80\x74\xff\x80\x74\x7f\xff\x02\x64\x0d\x07\x0b\x0b\x4b\x6a\x68\x61\x64\x66\x67\x6a\x6b\x6c\x68\x61\x64\x6b\x6c\x66\x67\x20\x6b\x61\x6a\x64\x66\x67\x6b\x6a\x61\x68\x64\x0a\x0a\x20\x20\x20\x20\x20\x02\x38\x0d\x07\x0b\x0b\x66\x67\x6b\x6c\x68\x61\x20\x64\x66\x6b\x6c\x67\x6a\x68\x61\x6b\x64\x6c\x6a\x66\x20\x67\x6b\x6a\x61\x64\x66\xa0\xa0\xa0\x2e\x0a\x0a\x20\x20\x20"

  it "should return the number of rows" do
    obj = NewforGem::Newfor.read(PACKET_26)
    obj.number_of_rows.must_equal 2
  end

  it 'should return S2 qwertyuiopasdfghjklñzxcvbnm' do
    obj = NewforGem::Newfor.read(ES_PKT_S2)
    obj.clean("ES").to_json.must_match(/\{\"timestamp\":\"\d\d:\d\d:\d\d:\d\d\d\",\"code\":\"build\",\"rows\":\[\"S2 qwertyuiopasdfghjklñzxcvbnm\"\]\}/ )
  end
 
  it "must return the special char" do 
    obj = NewforGem::Newfor.read(ES_PKT_S3)
    chr_array = Packet26.read(obj.rows[0].text)
    chr_array.special_chars.must_equal ["Ñ"]
  end

  it 'should return S3 QWERTYUIOPASDFGHJKLÑZXCVBNM' do
    obj = NewforGem::Newfor.read(ES_PKT_S3)
    obj.clean("ES").to_json.must_match(/\{\"timestamp\":\"\d\d:\d\d:\d\d:\d\d\d\",\"code\":\"build\",\"rows\":\[\"S3 QWERTYUIOPASDFGHJKLÑZXCVBNM\"\]\}/ )
  end

  it 'should return Two lines' do
    obj = NewforGem::Newfor.read(ES_PKT_TWO_LINES)
    obj.clean("ES").to_json.must_match(/\{\"timestamp\":\"\d\d:\d\d:\d\d:\d\d\d\",\"code\":\"build\",\"rows\":\[\"Kjhadfgjklhadklfg kajdfgkjahd\",\"fgklha dfklgjhakdljf gkjadfÇÑ€.\"\]\}/ )
  end
end
